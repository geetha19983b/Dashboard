@*@model IEnumerable<DashBoard.Models.BarChartVM>*@

@model PagedList.IPagedList<DashBoard.Models.BarChartVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


<script type="text/javascript">
    $(document).ready(function () {
        $('#myPager').on('click', 'a', function() {
            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function(result) {
                    $('#bootstrapDialog').html(result);
                    $('#bootstrapDialog').modal('show');
                  
                }
            });
            return false;
        });
    });

    //$(document).ready(function () {
    //    $('#chartsmodaltbl').DataTable();
    //});

    //$.fn.pageMe = function (opts) {
    //    var $this = this,
    //        defaults = {
    //            perPage: 7,
    //            showPrevNext: false,
    //            hidePageNumbers: false
    //        },
    //        settings = $.extend(defaults, opts);

    //    var listElement = $this;
    //    var perPage = settings.perPage;
    //    var children = listElement.children();
    //    var pager = $('.pager');

    //    if (typeof settings.childSelector != "undefined") {
    //        children = listElement.find(settings.childSelector);
    //    }

    //    if (typeof settings.pagerSelector != "undefined") {
    //        pager = $(settings.pagerSelector);
    //    }

    //    var numItems = children.size();
    //    var numPages = Math.ceil(numItems / perPage);

    //    pager.data("curr", 0);

    //    if (settings.showPrevNext) {
    //        $('<li><a href="#" class="prev_link">«</a></li>').appendTo(pager);
    //    }

    //    var curr = 0;
    //    while (numPages > curr && (settings.hidePageNumbers == false)) {
    //        $('<li><a href="#" class="page_link">' + (curr + 1) + '</a></li>').appendTo(pager);
    //        curr++;
    //    }

    //    if (settings.showPrevNext) {
    //        $('<li><a href="#" class="next_link">»</a></li>').appendTo(pager);
    //    }

    //    pager.find('.page_link:first').addClass('active');
    //    pager.find('.prev_link').hide();
    //    if (numPages <= 1) {
    //        pager.find('.next_link').hide();
    //    }
    //    pager.children().eq(1).addClass("active");

    //    children.hide();
    //    children.slice(0, perPage).show();

    //    pager.find('li .page_link').click(function () {
    //        var clickedPage = $(this).html().valueOf() - 1;
    //        goTo(clickedPage, perPage);
    //        return false;
    //    });
    //    pager.find('li .prev_link').click(function () {
    //        previous();
    //        return false;
    //    });
    //    pager.find('li .next_link').click(function () {
    //        next();
    //        return false;
    //    });

    //    function previous() {
    //        var goToPage = parseInt(pager.data("curr")) - 1;
    //        goTo(goToPage);
    //    }

    //    function next() {
    //        goToPage = parseInt(pager.data("curr")) + 1;
    //        goTo(goToPage);
    //    }

    //    function goTo(page) {
    //        var startAt = page * perPage,
    //            endOn = startAt + perPage;

    //        children.css('display', 'none').slice(startAt, endOn).show();

    //        if (page >= 1) {
    //            pager.find('.prev_link').show();
    //        }
    //        else {
    //            pager.find('.prev_link').hide();
    //        }

    //        if (page < (numPages - 1)) {
    //            pager.find('.next_link').show();
    //        }
    //        else {
    //            pager.find('.next_link').hide();
    //        }

    //        pager.data("curr", page);
    //        pager.children().removeClass("active");
    //        pager.children().eq(page + 1).addClass("active");

    //    }
    //};

    //$(document).ready(function () {

    //    $('#chartsmodaltbl').pageMe({ pagerSelector: '#myPager', showPrevNext: true, hidePageNumbers: false, perPage: 10 });

    //});
</script>


<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModal-label">Chart Data Inferences</h4>
        </div>
        <div class="modal-body">

            @*<div class="panel panel-primary small">*@
            <!-- Default panel contents -->
            @*<div class="panel-heading"><i class="fa fa-bar-chart-o fa-fw"></i>CSL Trend </div>*@

            <div class="row">
                <div class="table-responsive">
                    <table id="chartsmodaltbl" class="table table-condensed">

                        <thead>
                            <tr class="info">
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.IncidentNo)*@
                                    IncidentNo

                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.ShortDesc)*@
                                    ShortDesc
                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.Priority)*@
                                    Priority
                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.State)*@
                                    State
                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.Opened)*@
                                    Opened
                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.Metal)*@
                                    Metal
                                </th>
                                <th class="col-sm-1">
                                    @*@Html.DisplayNameFor(model => model.Tower)*@
                                    Tower
                                </th>

                            </tr>
                        </thead>
                        @foreach (var item in Model)
                        {
                            <tbody>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IncidentNo)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ShortDesc)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Priority)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.State)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Opened)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Metal)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Tower)
                                    </td>

                                </tr>
                            </tbody>
                        }
                    </table>
                </div>

                @*<div class="col-md-12 text-center">
                        <ul class="pagination pagination-sm pager" id="myPager"></ul>
                    </div>*@
                <br />
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                <div id="myPager">
                    @Html.PagedListPager(Model, page => Url.Action("BarChartInfer", new {
                   page,
                   chart = ViewBag.Chart,
                   Aging = ViewBag.Aging,
                   Tower = ViewBag.Tower
               }))
                    

                </div>


            </div>
        </div>
        <div class="modal-footer">
            @*<button class="btn btn-primary" id="btnOK" onclick="">OK</button>*@
            <button class="btn btn-primary" data-dismiss="modal" id="btnCancel">Close</button>
        </div>
    </div>
</div>
